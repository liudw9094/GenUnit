/*
 * CCoverageReportReader.cpp

 *
 *  Created on: Dec 10, 2015
 *      Author: ldw
 */
#include <stdio.h>
#include <iostream>
#include <string>
#include "CCoverageReportReader.h"

using namespace std;

CCoverageReportReader::CCoverageReportReader(const std::string& filepath) :
		m_filepath(filepath), m_nCoveredNum(-1), m_nTotalNum(-1), m_bFileValid(false)
{
	// TODO Auto-generated constructor stub

}

CCoverageReportReader::~CCoverageReportReader() {
	// TODO Auto-generated destructor stub
}

void CCoverageReportReader::readFile()
{
	vector<char> fileContent = getFileContent(m_filepath);
	size_t cur = 0;
	if(!GetCoverageInfo(fileContent, cur))
		return;
	m_bFileValid = true;
}

bool CCoverageReportReader::GetCoverageInfo(const std::vector<char>& content, size_t &nCur)
{
	string lines;
	bool bFoundCoverage = false;
	enum STATE
	{
		PRE_COVTEXT,
		COVTEXT,
		COVCONTENT
	} state = PRE_COVTEXT;
	while(nCur < content.size())
	{
		string line = getLine(content, nCur);
		switch(state)
		{
		case PRE_COVTEXT:
			if(line.find("COVERAGE BREAKDOWN BY PACKAGE:") != string.npos)
				state = COVTEXT;
			break;
		case COVTEXT:
			if(line.find("org.ldw.RunTest") != string.npos)
			{
				state = COVCONTENT;
				m_nCoveredNum = m_nTotalNum = 0;
			}
			break;
		case COVCONTENT:
			int nCoveredNum, nTotalNum;
			GetCoverageInfoPerPackage()
		}
	}
}

bool CCoverageReportReader::GetCoverageInfoPerPackage(const std::string& line,
													int &nCoveredNum,
													int &nTotalNum)
{

}


